@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script runat="server">
    void Page_Load(Object sender, EventArgs e) {
        
    }
 </script>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div style="width: 100%; height: 750px;">

        <div style="width: 75%; height: 100%; float:left;">                                       <!-- Left pane for calendars -->
            <div style="background-color: hotpink; width: 100%; height: 70%; float:left;">      <!-- Top left for month cal -->
                <!-- Need to auto-populate month & dates -->
                @{
                    string[] tdmonths = { "Januray", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
                }
                <h1>@tdmonths[DateTime.Now.Month-1]</h1>
                <table style="width:100%;height:10%">
                    <tr> <td>Sunday</td> <td>Monday</td> <td>Tuesday</td> <td>Wednesday</td> <td>Thursday</td> <td>Friday</td> <td>Saturday</td> </tr>
                </table>
                <table style="width: 100%; height: 80%">
                    <!-- Make nested for loops for displaying days -->
                    @{
                        DateTime dt = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
                        int start_of_month = (int)dt.DayOfWeek;
                        for(int i = 0; i < 5; i++)
                        {
                            <tr>
                                @{
                                    for(int j = 0; j < 7; j++)
                                    {
                                        int day_of_month = i * 7 + j + 1 - start_of_month;

                                        if (day_of_month > DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month))
                                        {
                                            day_of_month = day_of_month - DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month);
                                        }
                                        if(day_of_month < 1)
                                        {
                                            if (DateTime.Now.Month == 1)
                                            {
                                                day_of_month += 31;
                                            }
                                            else
                                            {
                                                day_of_month += DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month - 1);
                                            }
                                        }
                                        <td>@day_of_month</td>
                                    }
                                }
                            </tr>
                        }
                    }                    
                </table>
            </div>                                                                                  <!-- Bottom left for day cal -->
            <div style="background-color: green; width: 100%; height: 30%; float:left;">
                <div style="background-color: green; width:75%; height:100%; float:left">
                    day planner for @DateTime.Now.ToShortDateString()
                    <ul style="width:100%;height:80%;overflow-y:scroll">
                        @{
                            List<TDEvent> tdes = new List<TDEvent>();
                            for(int i = 0; i < 15; i++)
                            {
                                var tmptd = new TDEvent();          // need to make constructors protected when updating this
                                tdes.Add(tmptd);
                            }

                            for(int i = 0; i < tdes.Count; i++)
                            {
                                <li style="text-align:left;">@tdes[i].StartTimeString - @tdes[i].Name</li>
                            }
                        }
                    </ul>
                </div>
                <div style="background-color:indigo;width:25%;height:100%;float:right;">
                    edit events buttons
                    <button style="width:100%;height:20%;">Add Calendar Event</button>
                    <button style="width:100%;height:20%;">Edit Calendar Event</button>
                    <button style="width:100%;height:20%;">Remove Calendar Event</button>
                </div>
            </div>
        </div>

        <div style="background-color: mintcream; width:25%; height: 100%; float:left;">           <!-- Right pane for todo list -->
            <!-- Need to auto-populate list -->
            <h2>//todo list</h2>
            <ul id="todo_list" runat="server" class="TDTodo" style="width:100%; height:80%; overflow-y:scroll;">
                @{
                    List<TDTodo> tdlist = new List<TDTodo>();   //auto genning some objects for testing
                    for (int i = 0; i < 30; i++)
                    {
                        var tmptd = new TDTodo();
                        tdlist.Add(tmptd);
                    }

                    if(tdlist.Count == 0) { <li>Nothing to do!</li> } //display tdtodo object names in list
                    else {
                        for(int i = 0; i < tdlist.Count; i++)
                        {
                            <li>@tdlist[i].Name</li>
                        }
                    }
                }                
            </ul>           
            <button style="width:80%" id="mybutt">Create Item</button>
            <button style="width:80%">Edit   Item</button>
            <button style="width:80%">Delete Item</button>
        </div>
    </div>
</div>
